import com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer

plugins {
    id 'idea'
    id 'java-library'
    id 'com.github.johnrengelman.shadow'
    id 'nu.studer.jooq' version '5.2.1'
}

jar {
    manifest {
        attributes "Main-Class": "dev.armadeus.core.BootLoader"
        attributes 'Implementation-Title': "ArmaCore"
        attributes 'Implementation-Version': DEV_ENV
        attributes 'Implementation-Vendor': "Armadeus Devs"
        attributes 'Multi-Release': 'true'
        attributes 'Add-Opens': 'java.base/java.lang'
    }
}

shadowJar {
    transform(Log4j2PluginsCacheFileTransformer)
}

dependencies {
    // Jooq
    jooqGenerator 'org.postgresql:postgresql:42.3.3'
    // Lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

    // API
    implementation project(':arma-api')
    implementation project(':arma-rest')
    implementation group: 'com.velocitypowered', name: 'velocity-utils', version: '4.0.0-SNAPSHOT', changing: true

    // DatabaseImpl
    implementation 'com.zaxxer:HikariCP:5.0.1'

    // LoggingImpl
    implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-iostreams:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-jul:${log4jVersion}"
    implementation 'com.lmax:disruptor:3.4.4' // Async loggers

    // Utility
    api 'net.sf.jopt-simple:jopt-simple:5.0.4'// Command Line Args
    api 'com.google.guava:guava:30.0-jre'
}

shadowJar {
    mergeServiceFiles()
    relocate 'org.objectweb.asm', 'dev.armadeus.libraries.asm'
}

jooq {
    version = '3.14.8'
    edition = nu.studer.gradle.jooq.JooqEdition.OSS
    configurations {
        main {
            generateSchemaSourceOnCompilation = false
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.INFO
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = postgresUrl
                    user = postgresUser
                    password = postgresPass
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        includes = 'instances'
                        excludes = ''
                        inputSchema = 'public'
                    }
                    target {
                        packageName = 'dev.armadeus.bot.database.core'
                        directory = 'src/database/java'  // default (can be omitted)
                    }
                }
            }
        }
    }
}